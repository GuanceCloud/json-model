// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: guance/io/json/dashboard/v1alpha1/dashboard.proto

package dashboardv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DashboardBindSet   []*Empty   `protobuf:"bytes,1,rep,name=dashboard_bind_set,json=dashboardBindSet,proto3" json:"dashboard_bind_set,omitempty"`
	DashboardExtend    *Empty     `protobuf:"bytes,2,opt,name=dashboard_extend,json=dashboardExtend,proto3" json:"dashboard_extend,omitempty"`
	DashboardMapping   []*Empty   `protobuf:"bytes,3,rep,name=dashboard_mapping,json=dashboardMapping,proto3" json:"dashboard_mapping,omitempty"`
	DashboardOwnerType string     `protobuf:"bytes,4,opt,name=dashboard_owner_type,json=dashboardOwnerType,proto3" json:"dashboard_owner_type,omitempty"`
	DashboardType      string     `protobuf:"bytes,5,opt,name=dashboard_type,json=dashboardType,proto3" json:"dashboard_type,omitempty"`
	IconSet            *IconSet   `protobuf:"bytes,6,opt,name=icon_set,json=iconSet,proto3" json:"icon_set,omitempty"`
	Main               *Main      `protobuf:"bytes,7,opt,name=main,proto3" json:"main,omitempty"`
	Summary            string     `protobuf:"bytes,8,opt,name=summary,proto3" json:"summary,omitempty"`
	TagInfo            []*Taginfo `protobuf:"bytes,9,rep,name=tag_info,json=tagInfo,proto3" json:"tag_info,omitempty"`
	Tags               []*Empty   `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Thumbnail          string     `protobuf:"bytes,11,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Title              string     `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *Dashboard) GetDashboardBindSet() []*Empty {
	if x != nil {
		return x.DashboardBindSet
	}
	return nil
}

func (x *Dashboard) GetDashboardExtend() *Empty {
	if x != nil {
		return x.DashboardExtend
	}
	return nil
}

func (x *Dashboard) GetDashboardMapping() []*Empty {
	if x != nil {
		return x.DashboardMapping
	}
	return nil
}

func (x *Dashboard) GetDashboardOwnerType() string {
	if x != nil {
		return x.DashboardOwnerType
	}
	return ""
}

func (x *Dashboard) GetDashboardType() string {
	if x != nil {
		return x.DashboardType
	}
	return ""
}

func (x *Dashboard) GetIconSet() *IconSet {
	if x != nil {
		return x.IconSet
	}
	return nil
}

func (x *Dashboard) GetMain() *Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *Dashboard) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Dashboard) GetTagInfo() []*Taginfo {
	if x != nil {
		return x.TagInfo
	}
	return nil
}

func (x *Dashboard) GetTags() []*Empty {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Dashboard) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Dashboard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{1}
}

type IconSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *IconSet) Reset() {
	*x = IconSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconSet) ProtoMessage() {}

func (x *IconSet) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconSet.ProtoReflect.Descriptor instead.
func (*IconSet) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *IconSet) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *IconSet) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Colors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Colors) Reset() {
	*x = Colors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Colors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Colors) ProtoMessage() {}

func (x *Colors) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Colors.ProtoReflect.Descriptor instead.
func (*Colors) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *Colors) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Colors) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Colors) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Levels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineColor string   `protobuf:"bytes,1,opt,name=line_color,json=lineColor,proto3" json:"line_color,omitempty"`
	Operation string   `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Value     []uint32 `protobuf:"varint,3,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *Levels) Reset() {
	*x = Levels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Levels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Levels) ProtoMessage() {}

func (x *Levels) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Levels.ProtoReflect.Descriptor instead.
func (*Levels) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *Levels) GetLineColor() string {
	if x != nil {
		return x.LineColor
	}
	return ""
}

func (x *Levels) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Levels) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type Units struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit  string   `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Units []string `protobuf:"bytes,4,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *Units) Reset() {
	*x = Units{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Units) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Units) ProtoMessage() {}

func (x *Units) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Units.ProtoReflect.Descriptor instead.
func (*Units) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *Units) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Units) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Units) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Units) GetUnits() []string {
	if x != nil {
		return x.Units
	}
	return nil
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartType        string    `protobuf:"bytes,1,opt,name=chart_type,json=chartType,proto3" json:"chart_type,omitempty"`
	Colors           []*Colors `protobuf:"bytes,2,rep,name=colors,proto3" json:"colors,omitempty"`
	CompareTitle     string    `protobuf:"bytes,3,opt,name=compare_title,json=compareTitle,proto3" json:"compare_title,omitempty"`
	CompareType      string    `protobuf:"bytes,4,opt,name=compare_type,json=compareType,proto3" json:"compare_type,omitempty"`
	CurrentChartType string    `protobuf:"bytes,5,opt,name=current_chart_type,json=currentChartType,proto3" json:"current_chart_type,omitempty"`
	Density          string    `protobuf:"bytes,6,opt,name=density,proto3" json:"density,omitempty"`
	FixedTime        string    `protobuf:"bytes,7,opt,name=fixed_time,json=fixedTime,proto3" json:"fixed_time,omitempty"`
	IsPercent        bool      `protobuf:"varint,8,opt,name=is_percent,json=isPercent,proto3" json:"is_percent,omitempty"`
	IsTimeInterval   bool      `protobuf:"varint,9,opt,name=is_time_interval,json=isTimeInterval,proto3" json:"is_time_interval,omitempty"`
	Levels           []*Levels `protobuf:"bytes,10,rep,name=levels,proto3" json:"levels,omitempty"`
	OpenCompare      bool      `protobuf:"varint,11,opt,name=open_compare,json=openCompare,proto3" json:"open_compare,omitempty"`
	OpenStack        bool      `protobuf:"varint,12,opt,name=open_stack,json=openStack,proto3" json:"open_stack,omitempty"`
	ShowFieldMapping bool      `protobuf:"varint,13,opt,name=show_field_mapping,json=showFieldMapping,proto3" json:"show_field_mapping,omitempty"`
	ShowLine         bool      `protobuf:"varint,14,opt,name=show_line,json=showLine,proto3" json:"show_line,omitempty"`
	ShowTitle        bool      `protobuf:"varint,15,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	StackType        string    `protobuf:"bytes,16,opt,name=stack_type,json=stackType,proto3" json:"stack_type,omitempty"`
	TimeInterval     string    `protobuf:"bytes,17,opt,name=time_interval,json=timeInterval,proto3" json:"time_interval,omitempty"`
	TitleDesc        string    `protobuf:"bytes,18,opt,name=title_desc,json=titleDesc,proto3" json:"title_desc,omitempty"`
	Units            []*Units  `protobuf:"bytes,19,rep,name=units,proto3" json:"units,omitempty"`
	XAxisShowType    string    `protobuf:"bytes,20,opt,name=x_axis_show_type,json=xAxisShowType,proto3" json:"x_axis_show_type,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *Settings) GetChartType() string {
	if x != nil {
		return x.ChartType
	}
	return ""
}

func (x *Settings) GetColors() []*Colors {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *Settings) GetCompareTitle() string {
	if x != nil {
		return x.CompareTitle
	}
	return ""
}

func (x *Settings) GetCompareType() string {
	if x != nil {
		return x.CompareType
	}
	return ""
}

func (x *Settings) GetCurrentChartType() string {
	if x != nil {
		return x.CurrentChartType
	}
	return ""
}

func (x *Settings) GetDensity() string {
	if x != nil {
		return x.Density
	}
	return ""
}

func (x *Settings) GetFixedTime() string {
	if x != nil {
		return x.FixedTime
	}
	return ""
}

func (x *Settings) GetIsPercent() bool {
	if x != nil {
		return x.IsPercent
	}
	return false
}

func (x *Settings) GetIsTimeInterval() bool {
	if x != nil {
		return x.IsTimeInterval
	}
	return false
}

func (x *Settings) GetLevels() []*Levels {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *Settings) GetOpenCompare() bool {
	if x != nil {
		return x.OpenCompare
	}
	return false
}

func (x *Settings) GetOpenStack() bool {
	if x != nil {
		return x.OpenStack
	}
	return false
}

func (x *Settings) GetShowFieldMapping() bool {
	if x != nil {
		return x.ShowFieldMapping
	}
	return false
}

func (x *Settings) GetShowLine() bool {
	if x != nil {
		return x.ShowLine
	}
	return false
}

func (x *Settings) GetShowTitle() bool {
	if x != nil {
		return x.ShowTitle
	}
	return false
}

func (x *Settings) GetStackType() string {
	if x != nil {
		return x.StackType
	}
	return ""
}

func (x *Settings) GetTimeInterval() string {
	if x != nil {
		return x.TimeInterval
	}
	return ""
}

func (x *Settings) GetTitleDesc() string {
	if x != nil {
		return x.TitleDesc
	}
	return ""
}

func (x *Settings) GetUnits() []*Units {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *Settings) GetXAxisShowType() string {
	if x != nil {
		return x.XAxisShowType
	}
	return ""
}

type Extend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FixedTime string    `protobuf:"bytes,1,opt,name=fixed_time,json=fixedTime,proto3" json:"fixed_time,omitempty"`
	Settings  *Settings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *Extend) Reset() {
	*x = Extend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Extend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extend) ProtoMessage() {}

func (x *Extend) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extend.ProtoReflect.Descriptor instead.
func (*Extend) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *Extend) GetFixedTime() string {
	if x != nil {
		return x.FixedTime
	}
	return ""
}

func (x *Extend) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Pos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H uint32  `protobuf:"varint,1,opt,name=h,proto3" json:"h,omitempty"`
	I string  `protobuf:"bytes,2,opt,name=i,proto3" json:"i,omitempty"`
	W uint32  `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	X uint32  `protobuf:"varint,4,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,5,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Pos) Reset() {
	*x = Pos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos) ProtoMessage() {}

func (x *Pos) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos.ProtoReflect.Descriptor instead.
func (*Pos) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{9}
}

func (x *Pos) GetH() uint32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *Pos) GetI() string {
	if x != nil {
		return x.I
	}
	return ""
}

func (x *Pos) GetW() uint32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *Pos) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Pos) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Logic string `protobuf:"bytes,2,opt,name=logic,proto3" json:"logic,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Op    string `protobuf:"bytes,4,opt,name=op,proto3" json:"op,omitempty"`
	Type  string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Value string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Filters) Reset() {
	*x = Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{10}
}

func (x *Filters) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Filters) GetLogic() string {
	if x != nil {
		return x.Logic
	}
	return ""
}

func (x *Filters) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Filters) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Filters) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Filters) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type QueryFuncs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args []string `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Name string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryFuncs) Reset() {
	*x = QueryFuncs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFuncs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFuncs) ProtoMessage() {}

func (x *QueryFuncs) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFuncs.ProtoReflect.Descriptor instead.
func (*QueryFuncs) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{11}
}

func (x *QueryFuncs) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *QueryFuncs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alias       string        `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Code        string        `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	DataSource  string        `protobuf:"bytes,3,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	Field       string        `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	FieldFunc   string        `protobuf:"bytes,5,opt,name=field_func,json=fieldFunc,proto3" json:"field_func,omitempty"`
	FieldType   string        `protobuf:"bytes,6,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	Fill        string        `protobuf:"bytes,7,opt,name=fill,proto3" json:"fill,omitempty"`
	Filters     []*Filters    `protobuf:"bytes,8,rep,name=filters,proto3" json:"filters,omitempty"`
	FuncList    []string      `protobuf:"bytes,9,rep,name=func_list,json=funcList,proto3" json:"func_list,omitempty"`
	GroupBy     []string      `protobuf:"bytes,10,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	GroupByTime string        `protobuf:"bytes,11,opt,name=group_by_time,json=groupByTime,proto3" json:"group_by_time,omitempty"`
	Namespace   string        `protobuf:"bytes,12,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Q           string        `protobuf:"bytes,13,opt,name=q,proto3" json:"q,omitempty"`
	QueryFuncs  []*QueryFuncs `protobuf:"bytes,14,rep,name=query_funcs,json=queryFuncs,proto3" json:"query_funcs,omitempty"`
	Type        string        `protobuf:"bytes,15,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{12}
}

func (x *Query) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Query) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Query) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Query) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Query) GetFieldFunc() string {
	if x != nil {
		return x.FieldFunc
	}
	return ""
}

func (x *Query) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *Query) GetFill() string {
	if x != nil {
		return x.Fill
	}
	return ""
}

func (x *Query) GetFilters() []*Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Query) GetFuncList() []string {
	if x != nil {
		return x.FuncList
	}
	return nil
}

func (x *Query) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *Query) GetGroupByTime() string {
	if x != nil {
		return x.GroupByTime
	}
	return ""
}

func (x *Query) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Query) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *Query) GetQueryFuncs() []*QueryFuncs {
	if x != nil {
		return x.QueryFuncs
	}
	return nil
}

func (x *Query) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Queries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color      string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Datasource string `protobuf:"bytes,2,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Qtype      string `protobuf:"bytes,4,opt,name=qtype,proto3" json:"qtype,omitempty"`
	Query      *Query `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Type       string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Unit       string `protobuf:"bytes,7,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *Queries) Reset() {
	*x = Queries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queries) ProtoMessage() {}

func (x *Queries) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queries.ProtoReflect.Descriptor instead.
func (*Queries) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{13}
}

func (x *Queries) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Queries) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *Queries) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Queries) GetQtype() string {
	if x != nil {
		return x.Qtype
	}
	return ""
}

func (x *Queries) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *Queries) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Queries) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type Charts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extend  *Extend    `protobuf:"bytes,1,opt,name=extend,proto3" json:"extend,omitempty"`
	Group   *Group     `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Name    string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Pos     *Pos       `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
	Queries []*Queries `protobuf:"bytes,5,rep,name=queries,proto3" json:"queries,omitempty"`
	Type    string     `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Charts) Reset() {
	*x = Charts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Charts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Charts) ProtoMessage() {}

func (x *Charts) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Charts.ProtoReflect.Descriptor instead.
func (*Charts) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{14}
}

func (x *Charts) GetExtend() *Extend {
	if x != nil {
		return x.Extend
	}
	return nil
}

func (x *Charts) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Charts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Charts) GetPos() *Pos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Charts) GetQueries() []*Queries {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *Charts) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Defaultval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Defaultval) Reset() {
	*x = Defaultval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Defaultval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Defaultval) ProtoMessage() {}

func (x *Defaultval) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Defaultval.ProtoReflect.Descriptor instead.
func (*Defaultval) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{15}
}

func (x *Defaultval) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Defaultval) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultVal *Defaultval `protobuf:"bytes,1,opt,name=default_val,json=defaultVal,proto3" json:"default_val,omitempty"`
	Field      string      `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Metric     string      `protobuf:"bytes,3,opt,name=metric,proto3" json:"metric,omitempty"`
	Object     string      `protobuf:"bytes,4,opt,name=object,proto3" json:"object,omitempty"`
	Tag        string      `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Value      string      `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{16}
}

func (x *Definition) GetDefaultVal() *Defaultval {
	if x != nil {
		return x.DefaultVal
	}
	return nil
}

func (x *Definition) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Definition) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *Definition) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Definition) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Definition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Vars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Datasource string      `protobuf:"bytes,2,opt,name=datasource,proto3" json:"datasource,omitempty"`
	Definition *Definition `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	Hide       uint32      `protobuf:"varint,4,opt,name=hide,proto3" json:"hide,omitempty"`
	Name       string      `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Seq        uint32      `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`
	Type       string      `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	ValueSort  string      `protobuf:"bytes,8,opt,name=value_sort,json=valueSort,proto3" json:"value_sort,omitempty"`
}

func (x *Vars) Reset() {
	*x = Vars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vars) ProtoMessage() {}

func (x *Vars) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vars.ProtoReflect.Descriptor instead.
func (*Vars) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{17}
}

func (x *Vars) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Vars) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *Vars) GetDefinition() *Definition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Vars) GetHide() uint32 {
	if x != nil {
		return x.Hide
	}
	return 0
}

func (x *Vars) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vars) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Vars) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vars) GetValueSort() string {
	if x != nil {
		return x.ValueSort
	}
	return ""
}

type Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Charts []*Charts `protobuf:"bytes,1,rep,name=charts,proto3" json:"charts,omitempty"`
	Groups []string  `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Type   string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Vars   []*Vars   `protobuf:"bytes,4,rep,name=vars,proto3" json:"vars,omitempty"`
}

func (x *Main) Reset() {
	*x = Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Main) ProtoMessage() {}

func (x *Main) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Main.ProtoReflect.Descriptor instead.
func (*Main) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{18}
}

func (x *Main) GetCharts() []*Charts {
	if x != nil {
		return x.Charts
	}
	return nil
}

func (x *Main) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Main) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Main) GetVars() []*Vars {
	if x != nil {
		return x.Vars
	}
	return nil
}

type Taginfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Taginfo) Reset() {
	*x = Taginfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taginfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taginfo) ProtoMessage() {}

func (x *Taginfo) ProtoReflect() protoreflect.Message {
	mi := &file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taginfo.ProtoReflect.Descriptor instead.
func (*Taginfo) Descriptor() ([]byte, []int) {
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP(), []int{19}
}

func (x *Taginfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Taginfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_guance_io_json_dashboard_v1alpha1_dashboard_proto protoreflect.FileDescriptor

var file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDesc = []byte{
	0x0a, 0x31, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x69, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x21, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a,
	0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0xbf, 0x05, 0x0a, 0x09, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x56, 0x0a, 0x12, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x10, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x12, 0x53, 0x0a, 0x10,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x0f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x10, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x45, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x52,
	0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x45, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74,
	0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2f, 0x0a, 0x07, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x44, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x06, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x57, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0x9f,
	0x06, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x75, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x78, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69,
	0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73,
	0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x3e, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x73,
	0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x78, 0x5f, 0x61, 0x78, 0x69,
	0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x78, 0x41, 0x78, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x70, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x1b, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4b, 0x0a, 0x03, 0x50, 0x6f, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x77,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x7d, 0x0a, 0x07,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xec, 0x03, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x44,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x71, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x4e, 0x0a, 0x0b,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x73,
	0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xd1, 0x01, 0x0a, 0x07, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12,
	0x41, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x44, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73,
	0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x07, 0x71,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x76, 0x61, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xf6, 0x01, 0x0a, 0x04, 0x56, 0x61, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a,
	0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x69, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x04, 0x4d,
	0x61, 0x69, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e,
	0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x73, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x76, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f, 0x2e, 0x6a, 0x73, 0x6f,
	0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x61, 0x72, 0x73, 0x52, 0x04, 0x76, 0x61, 0x72, 0x73, 0x22,
	0x2d, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0xc4,
	0x02, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x69, 0x6f,
	0x2e, 0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x62, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x2f, 0x69, 0x6f, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02,
	0x04, 0x47, 0x49, 0x4a, 0x44, 0xaa, 0x02, 0x21, 0x47, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49,
	0x6f, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x21, 0x47, 0x75, 0x61, 0x6e,
	0x63, 0x65, 0x5c, 0x49, 0x6f, 0x5c, 0x4a, 0x73, 0x6f, 0x6e, 0x5c, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x2d,
	0x47, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x5c, 0x49, 0x6f, 0x5c, 0x4a, 0x73, 0x6f, 0x6e, 0x5c, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x25,
	0x47, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x3a, 0x3a, 0x49, 0x6f, 0x3a, 0x3a, 0x4a, 0x73, 0x6f, 0x6e,
	0x3a, 0x3a, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescOnce sync.Once
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescData = file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDesc
)

func file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescGZIP() []byte {
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescOnce.Do(func() {
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescData)
	})
	return file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDescData
}

var file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_guance_io_json_dashboard_v1alpha1_dashboard_proto_goTypes = []interface{}{
	(*Dashboard)(nil),  // 0: guance.io.json.dashboard.v1alpha1.Dashboard
	(*Empty)(nil),      // 1: guance.io.json.dashboard.v1alpha1.Empty
	(*IconSet)(nil),    // 2: guance.io.json.dashboard.v1alpha1.IconSet
	(*Colors)(nil),     // 3: guance.io.json.dashboard.v1alpha1.Colors
	(*Levels)(nil),     // 4: guance.io.json.dashboard.v1alpha1.Levels
	(*Units)(nil),      // 5: guance.io.json.dashboard.v1alpha1.Units
	(*Settings)(nil),   // 6: guance.io.json.dashboard.v1alpha1.Settings
	(*Extend)(nil),     // 7: guance.io.json.dashboard.v1alpha1.Extend
	(*Group)(nil),      // 8: guance.io.json.dashboard.v1alpha1.Group
	(*Pos)(nil),        // 9: guance.io.json.dashboard.v1alpha1.Pos
	(*Filters)(nil),    // 10: guance.io.json.dashboard.v1alpha1.Filters
	(*QueryFuncs)(nil), // 11: guance.io.json.dashboard.v1alpha1.QueryFuncs
	(*Query)(nil),      // 12: guance.io.json.dashboard.v1alpha1.Query
	(*Queries)(nil),    // 13: guance.io.json.dashboard.v1alpha1.Queries
	(*Charts)(nil),     // 14: guance.io.json.dashboard.v1alpha1.Charts
	(*Defaultval)(nil), // 15: guance.io.json.dashboard.v1alpha1.Defaultval
	(*Definition)(nil), // 16: guance.io.json.dashboard.v1alpha1.Definition
	(*Vars)(nil),       // 17: guance.io.json.dashboard.v1alpha1.Vars
	(*Main)(nil),       // 18: guance.io.json.dashboard.v1alpha1.Main
	(*Taginfo)(nil),    // 19: guance.io.json.dashboard.v1alpha1.Taginfo
}
var file_guance_io_json_dashboard_v1alpha1_dashboard_proto_depIdxs = []int32{
	1,  // 0: guance.io.json.dashboard.v1alpha1.Dashboard.dashboard_bind_set:type_name -> guance.io.json.dashboard.v1alpha1.Empty
	1,  // 1: guance.io.json.dashboard.v1alpha1.Dashboard.dashboard_extend:type_name -> guance.io.json.dashboard.v1alpha1.Empty
	1,  // 2: guance.io.json.dashboard.v1alpha1.Dashboard.dashboard_mapping:type_name -> guance.io.json.dashboard.v1alpha1.Empty
	2,  // 3: guance.io.json.dashboard.v1alpha1.Dashboard.icon_set:type_name -> guance.io.json.dashboard.v1alpha1.IconSet
	18, // 4: guance.io.json.dashboard.v1alpha1.Dashboard.main:type_name -> guance.io.json.dashboard.v1alpha1.Main
	19, // 5: guance.io.json.dashboard.v1alpha1.Dashboard.tag_info:type_name -> guance.io.json.dashboard.v1alpha1.Taginfo
	1,  // 6: guance.io.json.dashboard.v1alpha1.Dashboard.tags:type_name -> guance.io.json.dashboard.v1alpha1.Empty
	3,  // 7: guance.io.json.dashboard.v1alpha1.Settings.colors:type_name -> guance.io.json.dashboard.v1alpha1.Colors
	4,  // 8: guance.io.json.dashboard.v1alpha1.Settings.levels:type_name -> guance.io.json.dashboard.v1alpha1.Levels
	5,  // 9: guance.io.json.dashboard.v1alpha1.Settings.units:type_name -> guance.io.json.dashboard.v1alpha1.Units
	6,  // 10: guance.io.json.dashboard.v1alpha1.Extend.settings:type_name -> guance.io.json.dashboard.v1alpha1.Settings
	10, // 11: guance.io.json.dashboard.v1alpha1.Query.filters:type_name -> guance.io.json.dashboard.v1alpha1.Filters
	11, // 12: guance.io.json.dashboard.v1alpha1.Query.query_funcs:type_name -> guance.io.json.dashboard.v1alpha1.QueryFuncs
	12, // 13: guance.io.json.dashboard.v1alpha1.Queries.query:type_name -> guance.io.json.dashboard.v1alpha1.Query
	7,  // 14: guance.io.json.dashboard.v1alpha1.Charts.extend:type_name -> guance.io.json.dashboard.v1alpha1.Extend
	8,  // 15: guance.io.json.dashboard.v1alpha1.Charts.group:type_name -> guance.io.json.dashboard.v1alpha1.Group
	9,  // 16: guance.io.json.dashboard.v1alpha1.Charts.pos:type_name -> guance.io.json.dashboard.v1alpha1.Pos
	13, // 17: guance.io.json.dashboard.v1alpha1.Charts.queries:type_name -> guance.io.json.dashboard.v1alpha1.Queries
	15, // 18: guance.io.json.dashboard.v1alpha1.Definition.default_val:type_name -> guance.io.json.dashboard.v1alpha1.Defaultval
	16, // 19: guance.io.json.dashboard.v1alpha1.Vars.definition:type_name -> guance.io.json.dashboard.v1alpha1.Definition
	14, // 20: guance.io.json.dashboard.v1alpha1.Main.charts:type_name -> guance.io.json.dashboard.v1alpha1.Charts
	17, // 21: guance.io.json.dashboard.v1alpha1.Main.vars:type_name -> guance.io.json.dashboard.v1alpha1.Vars
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_guance_io_json_dashboard_v1alpha1_dashboard_proto_init() }
func file_guance_io_json_dashboard_v1alpha1_dashboard_proto_init() {
	if File_guance_io_json_dashboard_v1alpha1_dashboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Colors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Levels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Units); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Extend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFuncs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Charts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Defaultval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taginfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_guance_io_json_dashboard_v1alpha1_dashboard_proto_goTypes,
		DependencyIndexes: file_guance_io_json_dashboard_v1alpha1_dashboard_proto_depIdxs,
		MessageInfos:      file_guance_io_json_dashboard_v1alpha1_dashboard_proto_msgTypes,
	}.Build()
	File_guance_io_json_dashboard_v1alpha1_dashboard_proto = out.File
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_rawDesc = nil
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_goTypes = nil
	file_guance_io_json_dashboard_v1alpha1_dashboard_proto_depIdxs = nil
}
